class DataType4{

		public static void main(String[] args){
			//char c ='강'; // 2byte 용량임, 전세계의 모든 문자를 다 수용할 수 있음
							   // 만일 1byte 였다면, 영문자와 특수문자밖에 수용못함

			//char 형이 비록, 2byte(2의 16승 가지)를 표한할 수 있다 할지라도,
			//결국 유니코드를 담기 위한 즉 문자를 담기 위한 목적이므로, 음수를 지원하지 않는다.
			//따라서 산수 연산 목적에 데이터를 사용하는데에는 한계가 있다.
			//char a=65;

			//byte b = 13; // 1byte
			//int x =67;
			//x = b;  //가능 byte 는 1, int형은 4바이트이기 때문에, 작은 자료형을 큰 자료형
			//에 대입할 수 있다.

			//short s =27; // 2byte 

			//우측의 데이터를 좌측의 데이터로 변환하고자할때, 만일 손실이 예상되면
			//프로그램은 자동으로 형변환을 시도하지 않고, 개발자에게 컴파일 에러를 일으켜서
			//물어본다. 이때 손실을 감수해서라도 진행을 하고 싶다면, 강제 형변환
			//연산자인 (cast) 연산자를 사용한다.
			//b =(byte)s;

			//  1           2		    4		  8
			// byte < short < int < long

			short s =123; // 2
			byte b=7; // 1
			int x=78; // 4

			//우측에 b는 1.byte이고, 이b를 좌측의 s에 대입하려할때
			//컴파일러는 연산을 수행하기 전에, 양측의 데이터를 동일하게 맞추려한다.
			//이때 우측의 b가 좌측의 s보다 작은 자료형이므로, b를 --> s로 변환한다 하여
			//손실이 발생하는 일이 없기 때문에 개발자에게 물어보지도 않고 자동으로 b를
			//short 형으로 변환해버린다. 이런한 현상을 자동형변환이라한다.
			s=b;  //자동 형변환 1 -> 2

			b=(byte)x; // 4 -> 1 자동 형변환x 
		}

}